// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlayerBaseApi;

#nullable disable

namespace PlayerBaseApi.Migrations
{
    [DbContext(typeof(PlayerBaseContext))]
    [Migration("20230125143054_buff-addition")]
    partial class buffaddition
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlayerBaseApi.Entities.Attack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("ArriveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AttackerHeroId")
                        .HasColumnType("integer");

                    b.Property<int>("AttackerTroopCount")
                        .HasColumnType("integer");

                    b.Property<long>("AttackerUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ComeBackDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ResultData")
                        .HasColumnType("text");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.Property<byte?>("WinnerSide")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Attack");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Buff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ActiveSkillCooldownDuration")
                        .HasColumnType("double precision");

                    b.Property<int>("AfterActiveSkillImmuneSecond")
                        .HasColumnType("integer");

                    b.Property<string>("AfterActiveSkillTroopDamageWithSecond")
                        .HasColumnType("text");

                    b.Property<string>("AfterActiveSkillTroopDefenseWithSecond")
                        .HasColumnType("text");

                    b.Property<double>("AfterBattleHealth")
                        .HasColumnType("double precision");

                    b.Property<double>("AfterCriticHeal")
                        .HasColumnType("double precision");

                    b.Property<double>("AfterWinningTroopMarchSpeed")
                        .HasColumnType("double precision");

                    b.Property<double>("AllTowerAttackSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("AllTowerDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("AllTowerRangeMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("AttackChance")
                        .HasColumnType("double precision");

                    b.Property<double>("AttackReturnSpeed")
                        .HasColumnType("double precision");

                    b.Property<bool>("AutoLootRunActive")
                        .HasColumnType("boolean");

                    b.Property<double>("BarrackTroopCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("BaseDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("BaseTroopPower")
                        .HasColumnType("double precision");

                    b.Property<double>("BeingPrisonerMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("BuildingUpgradeCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("BuildingUpgradeDurationMultiplier")
                        .HasColumnType("double precision");

                    b.Property<bool>("CityShieldActive")
                        .HasColumnType("boolean");

                    b.Property<double>("CityWallDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("CriticDamage")
                        .HasColumnType("double precision");

                    b.Property<double>("CriticDamageChance")
                        .HasColumnType("double precision");

                    b.Property<int>("DamageDiffrence")
                        .HasColumnType("integer");

                    b.Property<int>("DamageDiffrenceNeutral")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("EnemyGangTroopDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("EnemyGangTroopDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("EnemyHeroDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("EnemyHeroDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("EnemyTroopDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("EnemyTroopDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<int>("EveryTroopsHitCount")
                        .HasColumnType("integer");

                    b.Property<string>("FirstTimeDamage")
                        .HasColumnType("text");

                    b.Property<int>("GangMemberCapacity")
                        .HasColumnType("integer");

                    b.Property<double>("GettingPrisonerMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HealChance")
                        .HasColumnType("double precision");

                    b.Property<double>("HealChanceTroopCount")
                        .HasColumnType("double precision");

                    b.Property<double>("HealingCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroBelowHealth")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroExpMultiplier")
                        .HasColumnType("double precision");

                    b.Property<string>("HeroFirstSecondDamageToEnemy")
                        .HasColumnType("text");

                    b.Property<string>("HeroFirstSecondDamageToNeutral")
                        .HasColumnType("text");

                    b.Property<string>("HeroFirstSecondDefenseToEnemy")
                        .HasColumnType("text");

                    b.Property<string>("HeroFirstSecondDefenseToNeutral")
                        .HasColumnType("text");

                    b.Property<int>("HeroHitCount")
                        .HasColumnType("integer");

                    b.Property<double>("HeroHpMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroLevelDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroLevelHpMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroLevelSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroMarchingSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("HeroSkillUseTroopGainHealth")
                        .HasColumnType("double precision");

                    b.Property<double>("LootBluePrintMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("LootCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("LootDurationMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("LootGemMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("LootPerfectRunMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("LootScrapMultiplier")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("NeutralDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("NeutralDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("NeutralUnitCoinMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("OtherGangDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("OtherGangDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("PrisonCapacityMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("PrisonCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("PrisonTrainingDurationMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("PrisonerExecutionIncomeMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("PrisonerTrainCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("RallyReturnSpeed")
                        .HasColumnType("double precision");

                    b.Property<double>("ResearchCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("ResearchSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("ScrapProductionSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("SkillDamage")
                        .HasColumnType("double precision");

                    b.Property<double>("SkillDamageDefense")
                        .HasColumnType("double precision");

                    b.Property<double>("SpyFakerMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("SpyProductionTimeMultiplier")
                        .HasColumnType("double precision");

                    b.Property<bool>("SpyProtectionActive")
                        .HasColumnType("boolean");

                    b.Property<double>("SupportUnitTroopCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("SupportUnitTroopCapacityMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TeleportCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TowerAttackSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TowerBuildCostMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TowerDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<int?>("TowerId")
                        .HasColumnType("integer");

                    b.Property<double>("TowerKillCoinMultiplier")
                        .HasColumnType("double precision");

                    b.Property<int?>("TowerLevel")
                        .HasColumnType("integer");

                    b.Property<double>("TowerRangeMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopBelowHealth")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopCountMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopDamageMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopDefenseMultiplier")
                        .HasColumnType("double precision");

                    b.Property<string>("TroopFirstSecondDamageToEnemy")
                        .HasColumnType("text");

                    b.Property<string>("TroopFirstSecondDamageToNeutral")
                        .HasColumnType("text");

                    b.Property<string>("TroopFirstSecondDefenseToEnemy")
                        .HasColumnType("text");

                    b.Property<string>("TroopFirstSecondDefenseToNeutral")
                        .HasColumnType("text");

                    b.Property<int>("TroopHitCount")
                        .HasColumnType("integer");

                    b.Property<double>("TroopHpMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopMarchingSpeedMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopScrapCapacityMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("TroopTrainingMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("WarHeroExpMultiplier")
                        .HasColumnType("double precision");

                    b.Property<double>("WarLootMultiplier")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Buff");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveSkillCooldownDuration = 0.0,
                            AfterActiveSkillImmuneSecond = 0,
                            AfterBattleHealth = 0.0,
                            AfterCriticHeal = 0.0,
                            AfterWinningTroopMarchSpeed = 0.0,
                            AllTowerAttackSpeedMultiplier = 0.0,
                            AllTowerDamageMultiplier = 0.0,
                            AllTowerRangeMultiplier = 0.0,
                            AttackChance = 0.0,
                            AttackReturnSpeed = 0.0,
                            AutoLootRunActive = false,
                            BarrackTroopCapacity = 0.0,
                            BaseDefenseMultiplier = 0.0,
                            BaseTroopPower = 0.0,
                            BeingPrisonerMultiplier = 0.0,
                            BuildingUpgradeCostMultiplier = 0.0,
                            BuildingUpgradeDurationMultiplier = 0.0,
                            CityShieldActive = false,
                            CityWallDefenseMultiplier = 0.0,
                            CriticDamage = 0.0,
                            CriticDamageChance = 0.0,
                            DamageDiffrence = 0,
                            DamageDiffrenceNeutral = 0,
                            Description = "",
                            EnemyGangTroopDamageMultiplier = 0.0,
                            EnemyGangTroopDefenseMultiplier = 0.0,
                            EnemyHeroDamageMultiplier = 0.0,
                            EnemyHeroDefenseMultiplier = 0.0,
                            EnemyTroopDamageMultiplier = 0.0,
                            EnemyTroopDefenseMultiplier = 0.0,
                            EveryTroopsHitCount = 0,
                            GangMemberCapacity = 0,
                            GettingPrisonerMultiplier = 0.0,
                            HealChance = 0.0,
                            HealChanceTroopCount = 0.0,
                            HealingCostMultiplier = 0.0,
                            HeroBelowHealth = 0.0,
                            HeroDamageMultiplier = 0.0,
                            HeroExpMultiplier = 0.0,
                            HeroHitCount = 0,
                            HeroHpMultiplier = 0.0,
                            HeroLevelDamageMultiplier = 0.0,
                            HeroLevelHpMultiplier = 0.0,
                            HeroLevelSpeedMultiplier = 0.0,
                            HeroMarchingSpeedMultiplier = 0.0,
                            HeroSkillUseTroopGainHealth = 0.0,
                            LootBluePrintMultiplier = 0.0,
                            LootCapacity = 0.0,
                            LootDurationMultiplier = 0.0,
                            LootGemMultiplier = 0.0,
                            LootPerfectRunMultiplier = 0.0,
                            LootScrapMultiplier = 0.0,
                            Name = "0-Buff",
                            NeutralDamageMultiplier = 0.0,
                            NeutralDefenseMultiplier = 0.0,
                            NeutralUnitCoinMultiplier = 0.0,
                            OtherGangDamageMultiplier = 0.0,
                            OtherGangDefenseMultiplier = 0.0,
                            PrisonCapacityMultiplier = 0.0,
                            PrisonCostMultiplier = 0.0,
                            PrisonTrainingDurationMultiplier = 0.0,
                            PrisonerExecutionIncomeMultiplier = 0.0,
                            PrisonerTrainCostMultiplier = 0.0,
                            RallyReturnSpeed = 0.0,
                            ResearchCostMultiplier = 0.0,
                            ResearchSpeedMultiplier = 0.0,
                            ScrapProductionSpeedMultiplier = 0.0,
                            SkillDamage = 0.0,
                            SkillDamageDefense = 0.0,
                            SpyFakerMultiplier = 0.0,
                            SpyProductionTimeMultiplier = 0.0,
                            SpyProtectionActive = false,
                            SupportUnitTroopCapacity = 0.0,
                            SupportUnitTroopCapacityMultiplier = 0.0,
                            TeleportCostMultiplier = 0.0,
                            TowerAttackSpeedMultiplier = 0.0,
                            TowerBuildCostMultiplier = 0.0,
                            TowerDamageMultiplier = 0.0,
                            TowerKillCoinMultiplier = 0.0,
                            TowerRangeMultiplier = 0.0,
                            TroopBelowHealth = 0.0,
                            TroopCountMultiplier = 0.0,
                            TroopDamageMultiplier = 0.0,
                            TroopDefenseMultiplier = 0.0,
                            TroopHitCount = 0,
                            TroopHpMultiplier = 0.0,
                            TroopMarchingSpeedMultiplier = 0.0,
                            TroopScrapCapacityMultiplier = 0.0,
                            TroopTrainingMultiplier = 0.0,
                            WarHeroExpMultiplier = 0.0,
                            WarLootMultiplier = 0.0
                        });
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BuildingType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-5.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Base"
                        },
                        new
                        {
                            Id = 2,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Gang Tower"
                        },
                        new
                        {
                            Id = 3,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Wall"
                        },
                        new
                        {
                            Id = 4,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Hospital"
                        },
                        new
                        {
                            Id = 5,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Prison"
                        },
                        new
                        {
                            Id = 6,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-6.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Market"
                        },
                        new
                        {
                            Id = 7,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Altar"
                        },
                        new
                        {
                            Id = 8,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Watch Tower"
                        },
                        new
                        {
                            Id = 9,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Research Laboratory"
                        },
                        new
                        {
                            Id = 10,
                            BuildUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-4.png",
                            IsActive = true,
                            MaxLevel = 1000,
                            Name = "Military Base"
                        });
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.BuildingUpgradeCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int?>("BuildingLevel")
                        .HasColumnType("integer");

                    b.Property<int?>("PrereqBuildingTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("PrereqLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("PrereqBuildingTypeId");

                    b.ToTable("BuildingUpgradeCondition");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.BuildingUpgradeTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuffId")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<int>("ScrapCount")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("UpgradeDuration")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.HasIndex("BuildingTypeId");

                    b.ToTable("BuildingUpgradeTime");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Dialog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DialogSceneId")
                        .HasColumnType("integer");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<int>("PlaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DialogSceneId");

                    b.HasIndex("HeroId");

                    b.ToTable("Dialog");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.DialogScene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DialogSceneCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DialogScene");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.FirstTimeTutorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FirstTimeTutorial");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.GateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GangAvatarId")
                        .HasColumnType("text");

                    b.Property<string>("GangId")
                        .HasColumnType("text");

                    b.Property<string>("GangName")
                        .HasColumnType("text");

                    b.Property<string>("GangShortName")
                        .HasColumnType("text");

                    b.Property<int>("GateId")
                        .HasColumnType("integer");

                    b.Property<int?>("GateStateEnum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("TotalTroopCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GateInfo");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundPictureUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsApe")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThemeColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hero");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "dummydescription",
                            IsActive = true,
                            IsApe = false,
                            MaxLevel = 30,
                            Name = "Zeus",
                            Price = 1,
                            Rarity = 1,
                            Story = "Dummyherostory",
                            ThemeColor = "#993333",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 2,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Hadesdescription",
                            IsActive = true,
                            IsApe = false,
                            MaxLevel = 30,
                            Name = "Hades",
                            Price = 1,
                            Rarity = 1,
                            Story = "Hadesherostory",
                            ThemeColor = "#2F4F4F",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-2-100x100.png"
                        },
                        new
                        {
                            Id = 3,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Poseidondescription",
                            IsActive = true,
                            IsApe = false,
                            MaxLevel = 30,
                            Name = "Poseidon",
                            Price = 1,
                            Rarity = 1,
                            Story = "Poseidonherostory",
                            ThemeColor = "#00FFFF",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-3-100x100.png"
                        },
                        new
                        {
                            Id = 4,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Odindescription",
                            IsActive = true,
                            IsApe = false,
                            MaxLevel = 30,
                            Name = "Odin",
                            Price = 1,
                            Rarity = 1,
                            Story = "Odinherostory",
                            ThemeColor = "#993333",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 5,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Thordescription",
                            IsActive = true,
                            IsApe = false,
                            MaxLevel = 30,
                            Name = "Thor",
                            Price = 1,
                            Rarity = 1,
                            Story = "Thorherostory",
                            ThemeColor = "#993333",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 6,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Smasher",
                            IsActive = true,
                            IsApe = true,
                            MaxLevel = 30,
                            Name = "Hulk",
                            Price = 1,
                            Rarity = 1,
                            Story = "Hulkherostory",
                            ThemeColor = "#006400",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 7,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Abominationdescription",
                            IsActive = true,
                            IsApe = true,
                            MaxLevel = 30,
                            Name = "Abomination",
                            Price = 1,
                            Rarity = 1,
                            Story = "Abominationherostory",
                            ThemeColor = "#7CFC00",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 8,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "octopusdescription",
                            IsActive = true,
                            IsApe = true,
                            MaxLevel = 30,
                            Name = "Dr. Octopus",
                            Price = 1,
                            Rarity = 1,
                            Story = "Octopusherostory",
                            ThemeColor = "#778899",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 9,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Just Joker",
                            IsActive = true,
                            IsApe = true,
                            MaxLevel = 30,
                            Name = "Joker",
                            Price = 1,
                            Rarity = 1,
                            Story = "Dramatic Hero Story",
                            ThemeColor = "#FF8C00",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 10,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Black Noir description",
                            IsActive = true,
                            IsApe = true,
                            MaxLevel = 30,
                            Name = "Black Noir",
                            Price = 1,
                            Rarity = 1,
                            Story = "Black Noir herostory",
                            ThemeColor = "#000000",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        },
                        new
                        {
                            Id = 11,
                            BackgroundPictureUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2022/09/Background-min-scaled.jpg",
                            Description = "Invinsible Gauntlet Lover",
                            IsActive = false,
                            IsApe = true,
                            MaxLevel = 30,
                            Name = "Thanos",
                            Price = 1,
                            Rarity = 1,
                            Story = "Long Story",
                            ThemeColor = "#8A2BE2",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2018/06/h2-custom-icon-img-1.png"
                        });
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HeroLevelThreshold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuffId")
                        .HasColumnType("integer");

                    b.Property<long>("Experience")
                        .HasColumnType("bigint");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroLevelThreshold");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HeroSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPassiveSkill")
                        .HasColumnType("boolean");

                    b.Property<int>("MaksLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlaceId")
                        .HasColumnType("integer");

                    b.Property<string>("TumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroSkill");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HeroSkillLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuffId")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<int>("HeroSkillId")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.HasIndex("HeroSkillId");

                    b.ToTable("HeroSkillLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HospitalLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("HealingCostPerUnit")
                        .HasColumnType("double precision");

                    b.Property<TimeSpan>("HealingDurationPerUnit")
                        .HasColumnType("interval");

                    b.Property<int>("HospitalCapacity")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("HospitalLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Value1")
                        .HasColumnType("integer");

                    b.Property<int?>("Value2")
                        .HasColumnType("integer");

                    b.Property<int?>("Value3")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemCategory");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConsumable")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.LootLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("LootDuration")
                        .HasColumnType("interval");

                    b.Property<int>("MaxBlueprintCount")
                        .HasColumnType("integer");

                    b.Property<int>("MaxGemCount")
                        .HasColumnType("integer");

                    b.Property<int>("MaxScrapCount")
                        .HasColumnType("integer");

                    b.Property<int>("MinBlueprintCount")
                        .HasColumnType("integer");

                    b.Property<int>("MinGemCount")
                        .HasColumnType("integer");

                    b.Property<int>("MinScrapCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LootLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.MarketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GemPrice")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("MarketOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("MaxCount")
                        .HasColumnType("integer");

                    b.Property<int>("ScrapPrice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("MarketItem");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerBaseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvatarId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("BaseFullDuration")
                        .HasColumnType("interval");

                    b.Property<int>("BaseLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<int>("BluePrints")
                        .HasColumnType("integer");

                    b.Property<int>("DefenseKillCount")
                        .HasColumnType("integer");

                    b.Property<int>("EpicHeroCards")
                        .HasColumnType("integer");

                    b.Property<int>("Fuel")
                        .HasColumnType("integer");

                    b.Property<int>("Gems")
                        .HasColumnType("integer");

                    b.Property<bool>("IsApe")
                        .HasColumnType("boolean");

                    b.Property<int>("KillCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("LastBaseCollect")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LegendaryHeroCards")
                        .HasColumnType("integer");

                    b.Property<int>("LootedScrap")
                        .HasColumnType("integer");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<int>("RareHeroCards")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceProductionPerHour")
                        .HasColumnType("integer");

                    b.Property<int>("Scraps")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayerBaseInfo");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerBasePlacement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("BuildingLevel")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("integer");

                    b.Property<double>("CoordX")
                        .HasColumnType("double precision");

                    b.Property<double>("CoordY")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset?>("UpdateEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BuildingTypeId");

                    b.ToTable("PlayerBasePlacement");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BuildingLevel = 1,
                            BuildingTypeId = 1,
                            CoordX = 1.0,
                            CoordY = 1.0,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerBuff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuffId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.ToTable("PlayerBuff");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillPoint")
                        .HasColumnType("integer");

                    b.Property<int>("TalentPoint")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("PlayerHero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHeroLoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("AutoLootRunEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GainedResources")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("LootLevelId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("OperationEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("OperationStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerHeroId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LootLevelId");

                    b.HasIndex("PlayerHeroId");

                    b.ToTable("PlayerHeroLoot");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHeroSkillLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HeroSkillLevelId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HeroSkillLevelId");

                    b.ToTable("PlayerHeroSkillLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("HealingDoneDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HospitalLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("InHealingCount")
                        .HasColumnType("integer");

                    b.Property<int>("InjuredCount")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HospitalLevelId");

                    b.ToTable("PlayerHospital");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("PlayerItem");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerMarketHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AfterGemCount")
                        .HasColumnType("integer");

                    b.Property<int>("AfterScrapCount")
                        .HasColumnType("integer");

                    b.Property<int>("BeforeGemCount")
                        .HasColumnType("integer");

                    b.Property<int>("BeforeScrapCount")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("MarketItemId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MarketItemId");

                    b.ToTable("PlayerMarketHistory");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerPrison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InTrainingPrisonerCount")
                        .HasColumnType("integer");

                    b.Property<int>("PrisonLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("PrisonerCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("TrainingDoneDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PrisonLevelId");

                    b.ToTable("PlayerPrison");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerResearchNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ResearchNodeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdateEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ResearchNodeId");

                    b.ToTable("PlayerResearchNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerScout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InTrainingCount")
                        .HasColumnType("integer");

                    b.Property<int>("ScoutLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("SpyCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("TrainingDoneDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ScoutLevelId");

                    b.ToTable("PlayerScout");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTalentTreeNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("TalentTreeNodeLevelId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TalentTreeNodeLevelId");

                    b.ToTable("PlayerTalentTreeNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTDReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("WaveId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("PlayerTDReward");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTDRewardHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("WaveId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlayerTDRewardHistory");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTroop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("LastTroopCollect")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("MaxDuration")
                        .HasColumnType("interval");

                    b.Property<int>("TrainingPerHour")
                        .HasColumnType("integer");

                    b.Property<int>("TroopCount")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PlayerTroop");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTutorialQuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsClaim")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<int>("TutorialQuestId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TutorialQuestId");

                    b.ToTable("PlayerTutorialQuest");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PrisonLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuffId")
                        .HasColumnType("integer");

                    b.Property<double>("ExecutionEarnPerUnit")
                        .HasColumnType("double precision");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPrisonerCount")
                        .HasColumnType("integer");

                    b.Property<double>("TrainingCostPerUnit")
                        .HasColumnType("double precision");

                    b.Property<TimeSpan>("TrainingDurationPerUnit")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.ToTable("PrisonLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Rally", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("ATotalDeadTroop")
                        .HasColumnType("integer");

                    b.Property<int?>("ATotalTroop")
                        .HasColumnType("integer");

                    b.Property<int?>("ATotalWoundedTroop")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ComeBackDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAbort")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("LeaderAvatarId")
                        .HasColumnType("integer");

                    b.Property<string>("LeaderGangAvatarId")
                        .HasColumnType("text");

                    b.Property<string>("LeaderGangId")
                        .HasColumnType("text");

                    b.Property<string>("LeaderGangName")
                        .HasColumnType("text");

                    b.Property<string>("LeaderUserCoord")
                        .HasColumnType("text");

                    b.Property<long>("LeaderUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LeaderUsername")
                        .HasColumnType("text");

                    b.Property<int?>("LootedScrap")
                        .HasColumnType("integer");

                    b.Property<int?>("PrisonerCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("RallyStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TargetAvatarId")
                        .HasColumnType("integer");

                    b.Property<int?>("TargetBarracksLevel")
                        .HasColumnType("integer");

                    b.Property<string>("TargetGangAvatarId")
                        .HasColumnType("text");

                    b.Property<string>("TargetGangId")
                        .HasColumnType("text");

                    b.Property<string>("TargetGangName")
                        .HasColumnType("text");

                    b.Property<int?>("TargetScrap")
                        .HasColumnType("integer");

                    b.Property<string>("TargetUserCoord")
                        .HasColumnType("text");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("TargetUsername")
                        .HasColumnType("text");

                    b.Property<int?>("TargetWallLevel")
                        .HasColumnType("integer");

                    b.Property<int?>("TargetsDeadTroop")
                        .HasColumnType("integer");

                    b.Property<int?>("TargetsTroop")
                        .HasColumnType("integer");

                    b.Property<int?>("TargetsWoundedTroop")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("WarDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte?>("WinnerSide")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Rally");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.RallyPart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("ArriveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("BarracksLevel")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ComeBackDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DeadTroop")
                        .HasColumnType("integer");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAbort")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("LootedScrap")
                        .HasColumnType("integer");

                    b.Property<int>("PrisonerCount")
                        .HasColumnType("integer");

                    b.Property<long>("RallyId")
                        .HasColumnType("bigint");

                    b.Property<int>("SenderAvatarId")
                        .HasColumnType("integer");

                    b.Property<int>("TroopCount")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WallLevel")
                        .HasColumnType("integer");

                    b.Property<int>("WoundedTroop")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RallyId");

                    b.ToTable("RallyPart");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuffId")
                        .HasColumnType("integer");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlaceId")
                        .HasColumnType("integer");

                    b.Property<int>("ResearchTableId")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.HasIndex("ResearchTableId");

                    b.ToTable("ResearchNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchNodeUpgradeCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuildingTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("PrereqLevel")
                        .HasColumnType("integer");

                    b.Property<int?>("ResearchNodeId")
                        .HasColumnType("integer");

                    b.Property<int>("ResearchNodeUpgradeNecessariesId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuildingTypeId");

                    b.HasIndex("ResearchNodeId");

                    b.HasIndex("ResearchNodeUpgradeNecessariesId");

                    b.ToTable("ResearchNodeUpgradeCondition");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchNodeUpgradeNecessaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BluePrintCount")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<int>("ResearchNodeId")
                        .HasColumnType("integer");

                    b.Property<int>("ScrapCount")
                        .HasColumnType("integer");

                    b.Property<int>("UpgradeLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResearchNodeId");

                    b.ToTable("ResearchNodeUpgradeNecessaries");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResearchTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Military Research",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-6.png"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Economical Research",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-6.png"
                        },
                        new
                        {
                            Id = 3,
                            Name = "General Research",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-6.png"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tower Defense Research",
                            ThumbnailUrl = "https://gaming.ndgstudio.com.tr/wp-content/uploads/2021/09/h1-client-img-6.png"
                        });
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Scout", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("ArrivedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AttackerDeadSpyCount")
                        .HasColumnType("integer");

                    b.Property<int>("AttackerSpyCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ComeBackDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DefenserDeadSpyCount")
                        .HasColumnType("integer");

                    b.Property<int>("DefenserSpyCount")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ScoutedData")
                        .HasColumnType("text");

                    b.Property<long>("SenderUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("SenderUsername")
                        .HasColumnType("text");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("TargetUsername")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Scout");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ScoutLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<double>("TrainingCostPerUnit")
                        .HasColumnType("double precision");

                    b.Property<TimeSpan>("TrainingDurationPerUnit")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.ToTable("ScoutLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.SupportUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("ArrivedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ClientAvatarId")
                        .HasColumnType("integer");

                    b.Property<string>("ClientCoord")
                        .HasColumnType("text");

                    b.Property<long>("ClientUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ComeBackDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Dead")
                        .HasColumnType("integer");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<string>("HeroName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HostAvatarId")
                        .HasColumnType("integer");

                    b.Property<string>("HostCoord")
                        .HasColumnType("text");

                    b.Property<long>("HostUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("HostUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("SendedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("TroopCount")
                        .HasColumnType("integer");

                    b.Property<int>("Wounded")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("SupportUnit");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TalentTree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThemeColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TalentTree");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TalentTreeNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HeroId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlaceId")
                        .HasColumnType("integer");

                    b.Property<int>("TalentTreeId")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("TalentTreeId");

                    b.ToTable("TalentTreeNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TalentTreeNodeLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuffId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("TalentTreeNodeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BuffId");

                    b.HasIndex("TalentTreeNodeId");

                    b.ToTable("TalentTreeNodeLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TutorialQuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("TutorialQuest");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TutorialQuestsGift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("TutorialQuestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("TutorialQuestId");

                    b.ToTable("TutorialQuestsGift");
                });

            modelBuilder.Entity("SharedLibrary.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("text");

                    b.Property<string>("AppVersion")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeviceId")
                        .HasColumnType("text");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .HasColumnType("text");

                    b.Property<double?>("Duration")
                        .HasColumnType("double precision");

                    b.Property<string>("EventId")
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .HasColumnType("text");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("InnerException")
                        .HasColumnType("text");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OsVersion")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("SharedLibrary.Entities.LogAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("text");

                    b.Property<string>("AppVersion")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeviceId")
                        .HasColumnType("text");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .HasColumnType("text");

                    b.Property<double?>("Duration")
                        .HasColumnType("double precision");

                    b.Property<string>("EventId")
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .HasColumnType("text");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OsVersion")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LogAction");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.BuildingUpgradeCondition", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.BuildingType", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.HasOne("PlayerBaseApi.Entities.BuildingType", "PrereqBuildingType")
                        .WithMany()
                        .HasForeignKey("PrereqBuildingTypeId");

                    b.Navigation("BuildingType");

                    b.Navigation("PrereqBuildingType");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.BuildingUpgradeTime", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId");

                    b.HasOne("PlayerBaseApi.Entities.BuildingType", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");

                    b.Navigation("BuildingType");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Dialog", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.DialogScene", "DialogScene")
                        .WithMany()
                        .HasForeignKey("DialogSceneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DialogScene");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HeroLevelThreshold", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HeroSkill", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.HeroSkillLevel", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.HeroSkill", "HeroSkill")
                        .WithMany()
                        .HasForeignKey("HeroSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");

                    b.Navigation("HeroSkill");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Item", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ItemType", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.MarketItem", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerBasePlacement", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.BuildingType", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuildingType");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerBuff", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHero", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHeroLoot", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.LootLevel", "LootLevel")
                        .WithMany()
                        .HasForeignKey("LootLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.PlayerHero", "PlayerHero")
                        .WithMany()
                        .HasForeignKey("PlayerHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LootLevel");

                    b.Navigation("PlayerHero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHeroSkillLevel", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.HeroSkillLevel", "HeroSkillLevel")
                        .WithMany()
                        .HasForeignKey("HeroSkillLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeroSkillLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerHospital", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.HospitalLevel", "HospitalLevel")
                        .WithMany()
                        .HasForeignKey("HospitalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerItem", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerMarketHistory", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.MarketItem", "MarketItem")
                        .WithMany()
                        .HasForeignKey("MarketItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarketItem");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerPrison", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.PrisonLevel", "PrisonLevel")
                        .WithMany()
                        .HasForeignKey("PrisonLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrisonLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerResearchNode", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.ResearchNode", "ResearchNode")
                        .WithMany()
                        .HasForeignKey("ResearchNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerScout", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.ScoutLevel", "ScoutLevel")
                        .WithMany()
                        .HasForeignKey("ScoutLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScoutLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTalentTreeNode", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.TalentTreeNodeLevel", "TalentTreeNodeLevel")
                        .WithMany()
                        .HasForeignKey("TalentTreeNodeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TalentTreeNodeLevel");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTDReward", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PlayerTutorialQuest", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.TutorialQuest", "TutorialQuest")
                        .WithMany()
                        .HasForeignKey("TutorialQuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TutorialQuest");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.PrisonLevel", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.RallyPart", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Rally", "Rally")
                        .WithMany("RallyParts")
                        .HasForeignKey("RallyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rally");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchNode", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.ResearchTable", "ResearchTable")
                        .WithMany()
                        .HasForeignKey("ResearchTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");

                    b.Navigation("ResearchTable");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchNodeUpgradeCondition", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.BuildingType", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingTypeId");

                    b.HasOne("PlayerBaseApi.Entities.ResearchNode", "ResearchNode")
                        .WithMany()
                        .HasForeignKey("ResearchNodeId");

                    b.HasOne("PlayerBaseApi.Entities.ResearchNodeUpgradeNecessaries", "ResearchNodeUpgradeNecessaries")
                        .WithMany()
                        .HasForeignKey("ResearchNodeUpgradeNecessariesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuildingType");

                    b.Navigation("ResearchNode");

                    b.Navigation("ResearchNodeUpgradeNecessaries");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.ResearchNodeUpgradeNecessaries", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.ResearchNode", "ResearchNode")
                        .WithMany()
                        .HasForeignKey("ResearchNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.SupportUnit", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TalentTreeNode", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.TalentTree", "TalentTree")
                        .WithMany()
                        .HasForeignKey("TalentTreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("TalentTree");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TalentTreeNodeLevel", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Buff", "Buff")
                        .WithMany()
                        .HasForeignKey("BuffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.TalentTreeNode", "TalentTreeNode")
                        .WithMany()
                        .HasForeignKey("TalentTreeNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buff");

                    b.Navigation("TalentTreeNode");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TutorialQuest", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.TutorialQuest", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.TutorialQuestsGift", b =>
                {
                    b.HasOne("PlayerBaseApi.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerBaseApi.Entities.TutorialQuest", "TutorialQuest")
                        .WithMany()
                        .HasForeignKey("TutorialQuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("TutorialQuest");
                });

            modelBuilder.Entity("PlayerBaseApi.Entities.Rally", b =>
                {
                    b.Navigation("RallyParts");
                });
#pragma warning restore 612, 618
        }
    }
}
